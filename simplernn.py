# -*- coding: utf-8 -*-
"""SimpleRNNE2E.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1z45jI1Ff05UIWusPsd-h1QNRKri9AChj
"""

pip install tensorflow==2.13.0

import tensorflow as tf
print(tf.__version__)

import numpy as np
import tensorflow as tf
from tensorflow.keras.datasets import imdb
from tensorflow.keras.preprocessing import sequence
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Embedding,SimpleRNN,Dense

max_features = 10000
(X_train , y_train) , (X_test , y_test) = imdb.load_data(num_words = max_features )

X_train.shape

y_train.shape

len(X_train[0])

len(X_train[21])

sample_review = X_train[0]
sample_label = y_train[0]

print(f"Sample Review : {sample_review}")
print(f"Sample Label : {sample_label}")

word_index = imdb.get_word_index()

revers_word_index = {value : key for key,value in word_index.items()}

max_len = 500
X_train = sequence.pad_sequences(X_train , maxlen = max_len)
X_test = sequence.pad_sequences(X_test , maxlen = max_len)

X_train[0]

model = Sequential()

model.add(Embedding(max_features , 128 , input_length=max_len))
model.add(SimpleRNN(128, activation = 'relu'))
model.add(Dense(1,activation = "sigmoid"))

model.summary()

model.compile(optimizer = 'adam' , loss = 'binary_crossentropy' , metrics = ['accuracy'])

from tensorflow.keras.callbacks import EarlyStopping

early_stopping = EarlyStopping(monitor = 'val_loss' , patience = 5 , restore_best_weights=True)

model.fit(
    X_train , y_train , epochs = 10 , batch_size = 32,
    validation_split = 0.2,
    callbacks = [early_stopping]
)

model.save('SIMPLERNN2E.h5')

from tensorflow.keras.models import load_model

model = load_model('SIMPLERNN2E.h5')

review = "The movie is not good I really hated it"
ar = review.split(" ")

my   = [word_index.get(word , -1) + 3  for word in ar]

for word in ar :
  print(word)

my

s1 = sequence.pad_sequences([my] , maxlen = 500)

s1

prediction = model.predict(s1)

print(prediction)

if prediction[0][0] > 0.5 :
  print("Good Review")
else:
  print("Bad Review")